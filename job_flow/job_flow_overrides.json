{
    "Name": "udacity_capstone_spark_on_emr",
    "ReleaseLabel": "emr-5.29.0",
    "Application": [{"Name": "Hadoop"}, {"Name": "Spark"}, {"Name": "Zeppelin"}, {"Name": "Hive"}],
    "BootstrapActions": [
      {
         "Name": "bootstrap_emr",
         "ScriptBootstrapAction": {
            // "Args": [ "string" ],
            // TODO:Set bootstrap_bucket in Airflow variables
            "Path": "s3://{{ var.value.bootstrap_bucket }}/bootstrap.sh"
         }
      }
    ],
    "Configurations": [
      {
         "Classification": "spark-env",
         "Configurations": [
             {
                 "Classification": "export",
                 "Properties": {
                     "PYSPARK_PYTHON": "/usr/bin/python3" //Amazon EMR release versions 5.20.0 and later: Python 3.6 is installed on the cluster instances. For 5.20.0-5.29.0, Python 2.7 is the system default. For Amazon EMR version 5.30.0 and later, Python 3 is the system default.
                 }
             }
         ]
      }
    ],
    "Instances": {
        // TODO:Set Ec2KeyName and Ec2SubnetId in Airflow variables
        // TODO: Check Ec2KeyName and Ec2SubnetId
        "Ec2KeyName": "my-key-pair",
        "Ec2SubnetId": "subnet-ec57ca94",
        "InstanceGroups": [
            {
                "Name": "Primary node",
                "Market": "ON_DEMAND",
                "InstanceRole": "MASTER",
                "InstanceType": "m5.xlarge",
                "InstanceCount": 1
            },
            {
                "Name": "Core node - 2",
                "Market": "ON_DEMAND",
                "InstanceRole": "CORE",
                "InstanceType": "m5.xlarge",
                "InstanceCount": 2
            }
        ],
        "KeepJobFlowAliveWhenNoSteps": "True",
        "TerminationProtected": "False"
    },
    "LogUri": "s3://{{ var.value.log_bucket }}/emrlogs/",
    // Use AWS CLI for searching JobFlowRole and ServiceRole: >> aws iam list-roles | grep "EMR_DefaultRole\|EMR_EC2_DefaultRole"
    // TODO:Set JobFlowRole and ServiceRole in Airflow variables
    "JobFlowRole": "{{ var.value.JobFlowRole }}",
    "ServiceRole": "{{ var.value.ServiceRole }}"
}